{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{useForm}from'react-hook-form';import{getAll}from'../../actions';import{create}from'./actions';import{CgToolbox}from'react-icons/cg';import{AiOutlineMail,AiOutlineUser,AiOutlineFilePdf}from'react-icons/ai';import{BsPhone}from'react-icons/bs';import Text from'../../components/Text';import Title from'../../components/Title';import Button from'../../components/Button';import bg from'../../assets/static/jobpool.jpg';import'./styles.scss';var style={backgroundImage:\"linear-gradient(\\nrgba(0, 0, 0, 0.9),\\nrgba(0, 0, 0, 0.9)\\n),url(\".concat(bg,\")\")};var JobPool=function JobPool(props){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var jobs=props.jobs;var onSubmit=function onSubmit(data){props.create(data);console.log(data);};useEffect(function(){props.getAll('jobs','GET_JOBS');// eslint-disable-next-line\n},[]);console.log(jobs);return/*#__PURE__*/React.createElement(\"div\",{className:\"job\",style:style},/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__right --hack\"},/*#__PURE__*/React.createElement(Title,{className:\"title --mid\"},\"Bolsa de trabajo\"),/*#__PURE__*/React.createElement(Text,{className:\"text\"},\"Conoce las oportunidades laborales que tenemos en Marathon Group.\"),/*#__PURE__*/React.createElement(\"a\",{target:\"blank\",href:\"https://www.linkedin.com/jobs/search/?f_C=10814090&geoId=92000000\"},/*#__PURE__*/React.createElement(Button,null,\"Vacantes vigentes\")),/*#__PURE__*/React.createElement(Text,{className:\"text\"},\"\\xF3\"),/*#__PURE__*/React.createElement(Text,{className:\"text\"},\"Comparte tus datos y te contactaremos cuando una vacante coincida con tu perfil.\"),/*#__PURE__*/React.createElement(\"form\",{className:\"jobContainer__form\",id:\"formJob\",onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\"},/*#__PURE__*/React.createElement(AiOutlineUser,null)),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",placeholder:\"Nombre Completo\",ref:register({required:true})})),/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\"},/*#__PURE__*/React.createElement(BsPhone,null)),/*#__PURE__*/React.createElement(\"input\",{type:\"tel\",name:\"phone\",placeholder:\"Tel\\xE9fono\",ref:register({required:true})})),/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\"},/*#__PURE__*/React.createElement(AiOutlineMail,null)),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"email\",placeholder:\"Email\",ref:register({required:true})})),/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\"},/*#__PURE__*/React.createElement(CgToolbox,null)),/*#__PURE__*/React.createElement(\"select\",{name:\"job\",ref:register({required:true})},jobs&&jobs.length>0?jobs.map(function(job){return/*#__PURE__*/React.createElement(\"option\",{key:job._id,value:job.name},job.name);}):/*#__PURE__*/React.createElement(\"option\",{disabled:true,value:\"0\"},\"No contamos con vacantes por el momento\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\"},/*#__PURE__*/React.createElement(AiOutlineFilePdf,null)),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",name:\"cv\",placeholder:\"Nombre Completo\",ref:register({required:true})})),/*#__PURE__*/React.createElement(\"div\",{className:\"jobContainer__formGroup\"},jobs&&jobs.length>0?/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"Enviar\"):/*#__PURE__*/React.createElement(Button,{type:\"submit\",disabled:true},\"Enviar\"))))));};var mapStateToProps=function mapStateToProps(state){return{jobs:state.reducerJobs.jobs};};var mapDispatchToProps={getAll:getAll,create:create};export default connect(mapStateToProps,mapDispatchToProps)(JobPool);","map":{"version":3,"sources":["C:/Users/MEPSA-FULLSTACK/Desktop/workspace-release-12-2022/web/src/pages/JobPool/index.jsx"],"names":["React","useEffect","connect","useForm","getAll","create","CgToolbox","AiOutlineMail","AiOutlineUser","AiOutlineFilePdf","BsPhone","Text","Title","Button","bg","style","backgroundImage","JobPool","props","register","handleSubmit","jobs","onSubmit","data","console","log","required","length","map","job","_id","name","mapStateToProps","state","reducerJobs","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { getAll } from '../../actions'\nimport { create } from './actions'\nimport { CgToolbox } from 'react-icons/cg'\nimport { AiOutlineMail, AiOutlineUser, AiOutlineFilePdf } from 'react-icons/ai'\nimport { BsPhone } from 'react-icons/bs'\nimport Text from '../../components/Text'\nimport Title from '../../components/Title'\nimport Button from '../../components/Button'\nimport bg from '../../assets/static/jobpool.jpg'\nimport './styles.scss'\n\nconst style = {\n  backgroundImage: `linear-gradient(\nrgba(0, 0, 0, 0.9),\nrgba(0, 0, 0, 0.9)\n),url(${bg})`,\n}\n\nconst JobPool = props => {\n  const { register, handleSubmit } = useForm()\n  const { jobs } = props\n\n  const onSubmit = data => {\n    props.create(data)\n    console.log(data)\n  }\n\n  useEffect(() => {\n    props.getAll('jobs', 'GET_JOBS')\n    // eslint-disable-next-line\n  }, [])\n\n  console.log(jobs)\n  return (\n    <div className=\"job\" style={style}>\n      <div className=\"jobContainer\">\n        <div className=\"jobContainer__right --hack\">\n          <Title className=\"title --mid\">Bolsa de trabajo</Title>\n          <Text className=\"text\">\n            Conoce las oportunidades laborales que tenemos en Marathon Group.\n          </Text>\n          <a\n            target=\"blank\"\n            href=\"https://www.linkedin.com/jobs/search/?f_C=10814090&geoId=92000000\"\n          >\n            <Button>Vacantes vigentes</Button>\n          </a>\n          <Text className=\"text\">รณ</Text>\n          <Text className=\"text\">\n            Comparte tus datos y te contactaremos cuando una vacante coincida\n            con tu perfil.\n          </Text>\n          <form\n            className=\"jobContainer__form\"\n            id=\"formJob\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className=\"jobContainer__formGroup\">\n              <label htmlFor=\"\">\n                <AiOutlineUser />\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Nombre Completo\"\n                ref={register({ required: true })}\n              />\n            </div>\n            <div className=\"jobContainer__formGroup\">\n              <label htmlFor=\"\">\n                <BsPhone />\n              </label>\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"Telรฉfono\"\n                ref={register({ required: true })}\n              />\n            </div>\n            <div className=\"jobContainer__formGroup\">\n              <label htmlFor=\"\">\n                <AiOutlineMail />\n              </label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                ref={register({ required: true })}\n              />\n            </div>\n            <div className=\"jobContainer__formGroup\">\n              <label htmlFor=\"\">\n                <CgToolbox />\n              </label>\n              <select name=\"job\" ref={register({ required: true })}>\n                {jobs && jobs.length > 0 ? (\n                  jobs.map(job => (\n                    <option key={job._id} value={job.name}>\n                      {job.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled value=\"0\">\n                    No contamos con vacantes por el momento\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className=\"jobContainer__formGroup\">\n              <label htmlFor=\"\">\n                <AiOutlineFilePdf />\n              </label>\n              <input\n                type=\"file\"\n                name=\"cv\"\n                placeholder=\"Nombre Completo\"\n                ref={register({ required: true })}\n              />\n            </div>\n            <div className=\"jobContainer__formGroup\">\n              {jobs && jobs.length > 0 ? (\n                <Button type=\"submit\">Enviar</Button>\n              ) : (\n                <Button type=\"submit\" disabled>\n                  Enviar\n                </Button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    jobs: state.reducerJobs.jobs,\n  }\n}\n\nconst mapDispatchToProps = {\n  getAll,\n  create,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobPool)\n"]},"metadata":{},"sourceType":"module"}