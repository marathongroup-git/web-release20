{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\MEPSA-FULLSTACK\\\\Desktop\\\\workspace-release-12-2022\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MEPSA-FULLSTACK\\\\Desktop\\\\workspace-release-12-2022\\\\web\\\\src\\\\pages\\\\Wiki\\\\WikiDetails\\\\index.jsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { getAll, get } from '../../../actions';\nimport Title from '../../../components/Title';\nimport Button from '../../../components/Button';\nimport banner from '../../../assets/static/divisions/banner.jpg';\nimport { BsChevronRight } from 'react-icons/bs';\nimport { AiOutlineFilePdf } from 'react-icons/ai';\nimport moment from 'moment';\nimport '../styles.scss';\n\nvar Wiki = function Wiki(props) {\n  var posts = props.posts,\n      categories = props.categories,\n      post = props.post;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategory = _useState2[0],\n      setSelectedCategory = _useState2[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  useEffect(function () {\n    props.getAll('wiki', 'GET_POSTS').then(function () {\n      props.getAll('wiki/categories', 'GET_CATEGORIES');\n    }).then(function () {\n      props.get(\"wiki/\".concat(id), 'GET_POST');\n    }); // eslint-disable-next-line\n  }, []);\n  var categoryFiltered = selectedCategory !== 0 ? posts.filter(function (post) {\n    return post.category_id === selectedCategory;\n  }) : posts;\n  var searchFiltered = categoryFiltered.filter(function (post) {\n    return post.title.toLowerCase().includes(search);\n  });\n\n  if (post) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__background\",\n      style: {\n        backgroundImage: \"linear-gradient(\\n        rgba(0, 0, 0, 0.5),\\n        rgba(0, 0, 0, 0.5)\\n      ), url(\".concat(banner, \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      className: \"title --center --white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, post.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wikiContainer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wikiContainer__content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"wiki__banner\",\n      src: \"\".concat(process.env.REACT_APP_API, \"docs/wiki/\").concat(post.img),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__post\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, post.paragraph && post.paragraph !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parragraph\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, post.paragraph) : null, post.subtitle && post.subtitle !== '' ? /*#__PURE__*/React.createElement(Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, post.subtitle) : null, post.paragraph2 && post.paragraph2 !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parragraph\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: banner,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }), post.paragraph2) : null, post.paragraph3 && post.paragraph3 !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parragraph\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: banner,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), post.paragraph3) : null), post.pdf && post.pdf !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__file\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\".concat(process.env.REACT_APP_API, \"docs/wiki/\").concat(post.pdf),\n      target: \"blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineFilePdf, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), \" Descargar\"))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wikiContainer__history\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__divider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Buscar\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"wiki__input\",\n      onChange: function onChange(e) {\n        return setSearch(e.target.value);\n      },\n      placeholder: \"Buscar...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__divider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Post Recientes\"), posts ? posts.slice(0, 3).map(function (post) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wiki__entryBlog\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"\".concat(process.env.REACT_APP_API, \"docs/wiki/\").concat(post.img),\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wiki__textBoxBlog\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, moment(post.created).format('YYYY-mm-DD'), \" |\\xA0By\", ' ', post.user_name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, post.title)));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__entryBlog\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: banner,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__textBoxBlog\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \"2020-01-01 |\\xA0By Marathon\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Seven Doubts You Should Clarify About\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__divider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Categor\\xEDas\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wiki__month\",\n      onClick: function onClick() {\n        return setSelectedCategory(0);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BsChevronRight, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), \" Todas\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })), categories ? categories.map(function (category) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wiki__month\",\n        onClick: function onClick() {\n          return setSelectedCategory(category.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(BsChevronRight, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }), \" \", category.name, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }));\n    }) : null)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 12\n      }\n    }, \"Cargando\");\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.reducerWiki.posts,\n    categories: state.reducerWiki.categories,\n    post: state.reducerWiki.post\n  };\n};\n\nvar mapDispatchToProps = {\n  getAll: getAll,\n  get: get\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wiki);","map":{"version":3,"sources":["C:/Users/MEPSA-FULLSTACK/Desktop/workspace-release-12-2022/web/src/pages/Wiki/WikiDetails/index.jsx"],"names":["React","useEffect","useState","connect","Link","useParams","getAll","get","Title","Button","banner","BsChevronRight","AiOutlineFilePdf","moment","Wiki","props","posts","categories","post","selectedCategory","setSelectedCategory","id","search","setSearch","then","categoryFiltered","filter","category_id","searchFiltered","title","toLowerCase","includes","backgroundImage","process","env","REACT_APP_API","img","paragraph","subtitle","paragraph2","paragraph3","pdf","e","target","value","slice","map","created","format","user_name","category","name","mapStateToProps","state","reducerWiki","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { getAll, get } from '../../../actions'\nimport Title from '../../../components/Title'\nimport Button from '../../../components/Button'\nimport banner from '../../../assets/static/divisions/banner.jpg'\nimport { BsChevronRight } from 'react-icons/bs'\nimport { AiOutlineFilePdf } from 'react-icons/ai'\nimport moment from 'moment'\nimport '../styles.scss'\n\nconst Wiki = props => {\n  const { posts, categories, post } = props\n  const [selectedCategory, setSelectedCategory] = useState(0)\n  const { id } = useParams()\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    props\n      .getAll('wiki', 'GET_POSTS')\n      .then(() => {\n        props.getAll('wiki/categories', 'GET_CATEGORIES')\n      })\n      .then(() => {\n        props.get(`wiki/${id}`, 'GET_POST')\n      })\n\n    // eslint-disable-next-line\n  }, [])\n\n  const categoryFiltered =\n    selectedCategory !== 0\n      ? posts.filter(post => post.category_id === selectedCategory)\n      : posts\n\n  const searchFiltered = categoryFiltered.filter(post =>\n    post.title.toLowerCase().includes(search)\n  )\n\n  if (post) {\n    return (\n      <div className=\"wiki\">\n        <div\n          className=\"wiki__background\"\n          style={{\n            backgroundImage: `linear-gradient(\n        rgba(0, 0, 0, 0.5),\n        rgba(0, 0, 0, 0.5)\n      ), url(${banner})`,\n          }}\n        >\n          <Title className=\"title --center --white\">{post.title}</Title>\n        </div>\n        <div className=\"wikiContainer\">\n          <div className=\"wikiContainer__content\">\n            <img\n              className=\"wiki__banner\"\n              src={`${process.env.REACT_APP_API}docs/wiki/${post.img}`}\n              alt=\"\"\n            />\n            <div className=\"wiki__post\">\n              {post.paragraph && post.paragraph !== '' ? (\n                <div className=\"parragraph\">{post.paragraph}</div>\n              ) : null}\n              {post.subtitle && post.subtitle !== '' ? (\n                <Title>{post.subtitle}</Title>\n              ) : null}\n              {post.paragraph2 && post.paragraph2 !== '' ? (\n                <div className=\"parragraph\">\n                  <img src={banner} alt=\"\" />\n                  {post.paragraph2}\n                </div>\n              ) : null}\n              {post.paragraph3 && post.paragraph3 !== '' ? (\n                <div className=\"parragraph\">\n                  <img src={banner} alt=\"\" />\n                  {post.paragraph3}\n                </div>\n              ) : null}\n            </div>\n            {post.pdf && post.pdf !== '' ? (\n              <div className=\"wiki__file\">\n                <a\n                  href={`${process.env.REACT_APP_API}docs/wiki/${post.pdf}`}\n                  target=\"blank\"\n                >\n                  <Button>\n                    <AiOutlineFilePdf /> Descargar\n                  </Button>\n                </a>\n              </div>\n            ) : null}\n            {/*  <div className=\"wiki__commnets\">\n              <h5>Dejanos un comentario</h5>\n              <textarea name=\"\" id=\"\"></textarea>\n              <div className=\"wiki__inputsGroup\">\n                <input type=\"text\" />\n                <input type=\"text\" />\n                <input type=\"text\" />\n              </div>\n              <Button>Enviar</Button>\n            </div> */}\n          </div>\n          <div className=\"wikiContainer__history\">\n            <div className=\"wiki__divider\">Buscar</div>\n            <input\n              className=\"wiki__input\"\n              onChange={e => setSearch(e.target.value)}\n              placeholder=\"Buscar...\"\n            />\n            <div className=\"wiki__divider\">Post Recientes</div>\n            {posts ? (\n              posts.slice(0, 3).map(post => (\n                <div className=\"wiki__entryBlog\">\n                  <img\n                    src={`${process.env.REACT_APP_API}docs/wiki/${post.img}`}\n                    alt=\"\"\n                  />\n                  <div className=\"wiki__textBoxBlog\">\n                    <span>\n                      {moment(post.created).format('YYYY-mm-DD')} | By{' '}\n                      {post.user_name}\n                    </span>\n                    <div>{post.title}</div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"wiki__entryBlog\">\n                <img src={banner} alt=\"\" />\n                <div className=\"wiki__textBoxBlog\">\n                  <span>2020-01-01 | By Marathon</span>\n                  <div>Seven Doubts You Should Clarify About</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"wiki__divider\">Categorías</div>\n            <div className=\"wiki__month\" onClick={() => setSelectedCategory(0)}>\n              <BsChevronRight /> Todas\n              <hr />\n            </div>\n            {categories\n              ? categories.map(category => (\n                  <div\n                    className=\"wiki__month\"\n                    onClick={() => setSelectedCategory(category.id)}\n                  >\n                    <BsChevronRight /> {category.name}\n                    <hr />\n                  </div>\n                ))\n              : null}\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return <h1>Cargando</h1>\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    posts: state.reducerWiki.posts,\n    categories: state.reducerWiki.categories,\n    post: state.reducerWiki.post,\n  }\n}\n\nconst mapDispatchToProps = {\n  getAll,\n  get,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wiki)\n"]},"metadata":{},"sourceType":"module"}